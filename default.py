# -*- coding: utf-8 -*-import os, re, random, sysimport urllib, urllib2, urlresolverimport xbmcplugin, xbmcgui, xbmc, xbmcaddonfrom t0mm0.common.addon import Addonfrom t0mm0.common.net import Net as netfrom bs4 import BeautifulSoup#Global Parametersaddon_id = 'plugin.video.desitashan'selfAddon = xbmcaddon.Addon(id=addon_id)_handle = int(sys.argv[1])cwd = selfAddon.getAddonInfo('path')addon = Addon(addon_id, sys.argv)fanart = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id, 'fanart.jpg'))icon = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id, 'icon.PNG'))#####Image Locationsimages = cwd + '/images/'siteImagePath = images + '/sites/'channelImagePath = images + '/channels/'#Site Image LocationdesiTashanImage = siteImagePath + 'desitashan.png'#Channel Image LocationstarPlusImage = channelImagePath + 'star.png'zeeImage = channelImagePath + 'zee.png'sonyImage = channelImagePath + 'sony.png'colorsImage = channelImagePath + 'colors.png'jalshaImage = channelImagePath + 'jalsha.png'amptvImage = channelImagePath + 'amptv.png'lifeOkImage = channelImagePath + 'lifeok.png'sonySabImage = channelImagePath + 'sonysab.png'mtvImage = channelImagePath + 'mtv.png'channelVImage = channelImagePath + 'channelv.png'##Site LocationdesiTashanUrl = 'http://www.desi-tashan.com/'def GET_BASE_URL(url):    if "desi-tashan" in url:        return desiTashanUrl    return 'http://www.example.com/'def GET_SITE_DATA(url):    req = urllib2.Request(url)    req.add_header('User-Agent',                   'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.0.3) Gecko/2008092417 Firefox/3.0.3')    response = urllib2.urlopen(req)    link = response.read()    response.close()    soup = BeautifulSoup(link, 'html.parser')    return soupdef REMOVE_CHARACTER(url, specialChar):    if url.startswith(specialChar):        return re.sub(specialChar, '', url, 1)    return urldef GET_WEBSITE_LIST():    addDir2('Desi-Tashan', desiTashanUrl, 1, desiTashanImage, '', fanart)    xbmc.executebuiltin('Container.SetViewMode(25)')def GET_TV_LIST(url, name):    print("In TV List Url==", url);    addDir2('Top Videos', url, 4, icon, '', fanart)    addDir2('Indian-Channels', url, 2, icon, '', fanart)    xbmc.executebuiltin('Container.SetViewMode(25)')def GET_CHANNEL_LIST(url, name):    print("In Chanel List Url==", url);    baseUrl = GET_BASE_URL(url)    soup = GET_SITE_DATA(baseUrl)    ul = soup.find("ul", {"id": "menu-indian-menu"})    for li in ul.find_all("li", {"class": "menu-item"}):        channel_url = ""        channel_name = ""        if li.a is not None:            channel_url = str(li.a['href'])            channel_name = str(li.a.getText())        if len(channel_name) == 0 and li.a is not None and li.a.span is not None:            channel_name = str(li.a.span.getText())        if "Others" not in channel_name:            print("Channel Name:==", channel_name, "Url:==", channel_url)            addDir2(channel_name, baseUrl + channel_url, 3, GET_CHANNEL_IMG(channel_url), '', fanart)    xbmc.executebuiltin('Container.SetViewMode(25)')def GET_SHOW_LIST(url, name):    print("In Show List Url==", url);    baseUrl = GET_BASE_URL(url)    soup = GET_SITE_DATA(url)    for div in soup.find_all("div", {"class": "fusion-column-wrapper"}):        showName = ""        showurl = ""        showImg = ""        if div.h4 is not None and len(div.h4) > 0:            showName = str(div.h4.a.get_text())            showurl = str(div.h4.a['href'])        if div.div is not None and div.div.span is not None and div.div.span.a is not None and div.div.span.a.img is not None:            showImg = str(div.div.span.a.img['src'])        if (len(showName) > 0 and len(showurl) > 0):            showurl = REMOVE_CHARACTER(showurl, '/')            print("Name:==", showName, "Url:==", showurl, "Img:==", showImg)            addDir2(showName, baseUrl + showurl, 4, baseUrl + showImg, '', fanart)    xbmc.executebuiltin('Container.SetViewMode(25)')def GET_EPISODE_LIST(url, name):    print("In Top Video Links Url==", url);    baseUrl = GET_BASE_URL(url)    soup = GET_SITE_DATA(url)    for div in soup.find_all("div", {"class": "fusion-column-wrapper"}):        episodeName = ""        episodeUrl = ""        episodeImage = ""        if div.h4 is not None and len(div.h4) > 0:            episodeName = str(div.h4.a.get_text())            episodeUrl = str(div.h4.a['href'])        innerDiv = div.find("div", {"class": "imageframe-align-center"})        if innerDiv is not None and innerDiv.span is not None and innerDiv.span.a is not None and innerDiv.span.a.img is not None:            episodeImage = str(innerDiv.span.a.img['src'])        if (len(episodeName) > 0 and len(episodeUrl) > 0 and "Written" not in episodeName):            episodeUrl = REMOVE_CHARACTER(episodeUrl, '/')            episodeImage = REMOVE_CHARACTER(episodeImage, '/')            print("Name:==", episodeName, "Url:==", url + episodeUrl, "Image:==", url + episodeImage)            addDir2(episodeName, baseUrl + episodeUrl, 5, baseUrl + episodeImage, '', fanart)    xbmc.executebuiltin('Container.SetViewMode(25)')def GET_STREAM_LINKS(url, name):    print("In Stream Links Url==", url);    soup = GET_SITE_DATA(url)    for p in soup.find_all("p", {"class": "vidLinksContent"}):        for a in p.find_all("a"):            if a.has_attr('title'):                streamTitle = a['title']            else:                streamTitle = a.get_text()            streamUrl = a['href']            print("Url:=", streamUrl, " Title:=", streamTitle)            addDir2(streamTitle, streamUrl, 100, icon, '', fanart)    xbmc.executebuiltin('Container.SetViewMode(25)')def GET_FINISHED_SHOW_LIST(url, name):    print("In Finished Links Url==", url);    xbmc.executebuiltin('Container.SetViewMode(25)')def PLAYLINK(url, name):    url = str('http://www.vidsplay.com/vids/pizza.mp4')    url = str('http://watchvideo.us/embed-j1kmvbkwsq2t.html')    print("In Playlink Url==", url);    #play_item = xbmcgui.ListItem(path=url)    #xbmcplugin.setResolvedUrl(_handle, True, listitem=play_item)    #url = urlresolver.resolve(url)    #liz = xbmcgui.ListItem(name, iconImage='DefaultVideo.png', thumbnailImage=iconimage)    #liz.setPath(url)    #xbmcplugin.setResolvedUrl(int(sys.argv[1]), True, liz)    playlist = xbmc.PlayList(xbmc.PLAYLIST_VIDEO)    playlist.clear()    playlist.add(url=url, listitem=xbmcgui.ListItem(path=url))    xbmc.Player().play(playlist)def GET_CHANNEL_IMG(url):    channel = re.sub('[-]', '', url).lower()    print('Channel==', channel)    if "starplus" in channel:        return starPlusImage    elif "zeetv" in channel:        return zeeImage    elif "sonytv" in channel:        return sonyImage    elif "colorstv" in channel:        return colorsImage    elif "starjalsha" in channel:        return jalshaImage    elif "andtv" in channel:        return amptvImage    elif "lifeok" in channel:        return lifeOkImage    elif "sabtv" in channel:        return sonySabImage    elif "mtv" in channel:        return mtvImage    elif "channelv" in channel:        return channelVImage    else: return icondef get_params():    param = []    paramstring = sys.argv[2]    if len(paramstring) >= 2:        params = sys.argv[2]        cleanedparams = params.replace('?', '')        if (params[len(params) - 1] == '/'):            params = params[0:len(params) - 2]        pairsofparams = cleanedparams.split('&')        param = {}        for i in range(len(pairsofparams)):            splitparams = {}            splitparams = pairsofparams[i].split('=')            if (len(splitparams)) == 2:                param[splitparams[0]] = splitparams[1]    return paramdef addDir2(name, url, mode, iconimage, fanart, description=''):    u = sys.argv[0] + "?url=" + urllib.quote_plus(url) + "&mode=" + str(mode) + "&name=" + urllib.quote_plus(        name) + "&description=" + str(description) + "&iconimage=" + urllib.quote_plus(iconimage)    ok = True    liz = xbmcgui.ListItem(name, iconImage="DefaultFolder.png", thumbnailImage=iconimage)    liz.setProperty('fanart_image', fanart)    ok = xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]), url=u, listitem=liz, isFolder=True)    return okparams = get_params();url = None;name = None;mode = None;site = Nonetry:    site = urllib.unquote_plus(params["site"])except:    passtry:    url = urllib.unquote_plus(params["url"])except:    passtry:    name = urllib.unquote_plus(params["name"])except:    passtry:    mode = int(params["mode"])except:    passtry:    iconimage = urllib.unquote_plus(params["iconimage"])except:    passprint("DTS Site:", str(site))print("DTS Url:", str(url))print("DTS Name:", str(name))print("DTS Mode:", str(mode))if mode == None or url == None or len(url) < 1:    GET_WEBSITE_LIST()elif mode == 1:    GET_TV_LIST(url, name)elif mode == 2:    GET_CHANNEL_LIST(url, name)elif mode == 3:    GET_SHOW_LIST(url, name)elif mode == 4:    GET_EPISODE_LIST(url, name)elif mode == 5:    GET_STREAM_LINKS(url, name)elif mode == 6:    GET_FINISHED_SHOW_LIST(url, name)elif mode == 100:    PLAYLINK(url, name)xbmcplugin.endOfDirectory(int(sys.argv[1]))